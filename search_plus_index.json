{"./":{"url":"./","title":"ReadMe","keywords":"","body":"About for wiki power by gitbook & plug/theme by zitiao plug/theme:https://github.com/zitiaocn/simple document:http://zitiao.org/deploy/ background process setsid gitbook serve . kill port netstat -anp | grep 4000 kill -9 XXX Step 1 Run command-line as an Administrator. Then run the below mention command. type your port number in yourPortNumber netstat -ano | findstr :yourPortNumber C:\\Users\\yaokunyi>netstat -ano | findstr :35729 TCP 0.0.0.0:35729 0.0.0.0:0 LISTENING 5396 TCP [::]:35729 [::]:0 LISTENING 5396 See the PID ? In here the port is 5396 (process identifier) Step 2 Then you execute this command after identify the PID. (/F forcefully terminates the process) taskkill /PID typeyourPIDhere /F C:\\Users\\yaokunyi>taskkill /PID 5396 /F SUCCESS: The process with PID 5396 has been terminated. P.S. Run the first command again to check if process is still available or not. You'll get empty line if process is successfully ended By stackoverflow how to kill port "},"docs/about.html":{"url":"docs/about.html","title":"About","keywords":"","body":"About for wiki power by gitbook & plug/theme by zitiao plug/theme:https://github.com/zitiaocn/simple document:http://zitiao.org/deploy/ background process setsid gitbook serve . kill port netstat -anp | grep 4000 kill -9 XXX Step 1 Run command-line as an Administrator. Then run the below mention command. type your port number in yourPortNumber netstat -ano | findstr :yourPortNumber C:\\Users\\yaokunyi>netstat -ano | findstr :35729 TCP 0.0.0.0:35729 0.0.0.0:0 LISTENING 5396 TCP [::]:35729 [::]:0 LISTENING 5396 See the PID ? In here the port is 5396 (process identifier) Step 2 Then you execute this command after identify the PID. (/F forcefully terminates the process) taskkill /PID typeyourPIDhere /F C:\\Users\\yaokunyi>taskkill /PID 5396 /F SUCCESS: The process with PID 5396 has been terminated. P.S. Run the first command again to check if process is still available or not. You'll get empty line if process is successfully ended By stackoverflow how to kill port "},"docs/base/ubuntu源.html":{"url":"docs/base/ubuntu源.html","title":"ubuntu 源","keywords":"","body":"Ubuntu ali edit source list vim /etc/apt/sources.list delete all & replace ali # deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties deb http://mirrors.aliyun.com/ubuntu/ xenial universe deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties deb http://archive.canonical.com/ubuntu xenial partner deb-src http://archive.canonical.com/ubuntu xenial partner deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse 163 别用这个，mysql装不上 #163 deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse update sudo apt update sudo apt upgrade 关于Ubuntu中Could not get lock /var/lib/dpkg/lock解决方案 E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable) E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it? 找到并且杀掉所有的apt-get 和apt进程 运行下面的命令来生成所有含有 apt 的进程列表，你可以使用ps和grep命令并用管道组合来得到含有apt或者apt-get的进程。 ps -A | grep apt 找出所有的 apt 以及 apt-get 进程 sudo kill -9 processnumber 或者 sudo kill -SIGKILL processnumber 比如，下面命令中的 9 是 SIGKILL 的信号数，它会杀掉第一个 apt 进程 sudo kill -9 进程ID 或者 sudo kill -SIGKILL 进程ID 删除锁定文件 锁定的文件会阻止 Linux 系统中某些文件或者数据的访问，这个概念也存在于 Windows 或者其他的操作系统中。 一旦你运行了 apt-get 或者 apt 命令，锁定文件将会创建于 /var/lib/apt/lists/、/var/lib/dpkg/、/var/cache/apt/archives/ 中。 这有助于运行中的 apt-get 或者 apt 进程能够避免被其它需要使用相同文件的用户或者系统进程所打断。当该进程执行完毕后，锁定文件将会删除。 当你没有看到 apt-get 或者 apt 进程的情况下在上面两个不同的文件夹中看到了锁定文件，这是因为进程由于某个原因被杀掉了，因此你需要删除锁定文件来避免该错误。 首先运行下面的命令来移除 /var/lib/dpkg/ 文件夹下的锁定文件： sudo rm /var/lib/dpkg/lock 之后像下面这样强制重新配置软件包： sudo dpkg --configure -a 也可以删除 /var/lib/apt/lists/ 以及缓存文件夹下的锁定文件： sudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock 接下来，更新你的软件包源列表： sudo apt update 或者 sudo apt-get update 总结一下，对于 Ubuntu（以及它的衍生版）用户在使用 apt-get 或者 apt 也叫 aptitude 命令[7]时遇到的问题，我们已经用两种方法来解决了。 参考： 关于Ubuntu中Could not get lock /var/lib/dpkg/lock解决方案 "},"docs/base/JDK安装.html":{"url":"docs/base/JDK安装.html","title":"JDK 安装","keywords":"","body":"安装JDK1.8 用浏览器打开 https://www.oracle.com/downloads/index.html 找到 Downloads by Category* 点击Java 再点击 Java (JDK) for Developers 找到 Java SE 8u181 点击 JDK DOWNLOAD 找到 Java SE Development Kit 8u181 点击 Accept License Agreement 选择 Linux x64 jdk-8u181-linux-x64.tar.gz 点击名称下载，将下载的压缩包上传到虚拟机(或者复制下载地址 使用wget命令在虚拟机上下载 使用wget下载需要重命名下载文件 jdk-8u181-linux-x64.tar.gz )wget http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz tar -xvf jdk-8u181-linux-x64.tar.gz 解压安装包 vim /etc/profile 文末加上 ### JAVA_HOME export JAVA_HOME=/opt/jdk export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin 最后使用 source /etc/profile 让 profile文件立即生效。 使用 javac 及 java -version 命令来检查是否按照成功 "},"docs/base/MySQL安装.html":{"url":"docs/base/MySQL安装.html","title":"MySQL 安装","keywords":"","body":"mysql安装文档 安装 apt-get install software-properties-common add-apt-repository 'deb http://archive.ubuntu.com/ubuntu trusty universe' sudo apt-get update sudo apt install mysql-server 使用service 启动、关闭MySQL服务 service mysql start service mysql stop service mysql restart 使用ps -aux | grep mysql 查询是否启动成功 修改root权限 mysql -u root -p show databases; use mysql; 两种 改表法 可能是你的帐号不允许从远程登陆，只能在localhost。这个时候只要在localhost的那台电脑，登入mysql后，更改 \"mysql\" 数据库里的 \"user\" 表里的 \"host\" 项，从\"localhost\"改称\"%\" mysql -u root -p use mysql; update user set host = '%' where user = 'root'; select host, user from user; 授权法 赋予任何主机访问数据的权限 :GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'WITH GRANT OPTION 修改生效 :mysql>FLUSH PRIVILEGES 结果出现，就OK了： +-----------+------------------+ | host | user | +-----------+------------------+ | % | root | | localhost | debian-sys-maint | | localhost | mysql.session | | localhost | mysql.sys | +-----------+------------------+ 无法远程连接MySQL服务器 ( 直接跳到最后标题 ) 要在Linux终端中测试远程MySQL连接： mysql -u username -h 192.16.8.1.22 -p 或者通过WIndows的Telnet： telnet 192.16.8.1.22 3306 如果在尝试连接到远程MySQL服务器时遇到错误 ERROR 2003 (HY000): Can't connect to MySQL server on '192.16.8.1.22' (111) 或者在Telnet中 Connecting To 192.16.8.1.22...Could not open connection to the host, on port 3306: Connect failed 检查防火墙 首先，如果ufw启用了防火墙，请确保您有MySQL规则 sudo ufw allow mysql 重启服务 sudo service ufw restart 检查MySQL配置(百试百灵，终极) bind-address在MySQL配置文件 mysqld.cnf 中 ，把这鬼东西注释掉 sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 找到行bind-address # # Instead of skip-networking the default is now to listen only on # localhost which is more compatible and is not less secure. # bind-address = 127.0.0.1 (把这行注释掉) 以上行告诉MySQL只接受本地连接。通过#在它之前添加来注释掉这一行。 重新启动MySQL服务以使更改生效。 sudo service mysql restart 参考 ：Can’t connect to MySQL server remotely on Ubuntu "},"docs/base/Redis安装.html":{"url":"docs/base/Redis安装.html","title":"Redis 安装","keywords":"","body":"安装redis 安装准备 确保机子能执行相关命令 apt install make gcc 获取redis资源 wget http://download.redis.io/releases/redis-4.0.8.tar.gz 解压 tar xzvf redis-4.0.8.tar.gz 安装 cd redis-4.0.8 make make install cd src make install PREFIX=/usr/local/redis 出现以下错误（假如出现该情况，不是每次） zmalloc.h:50:31: error: jemalloc/jemalloc.h: No such file or directory zmalloc.h:55:2: error: #error \"Newer version of jemalloc required\" make[1]: *** [adlist.o] Error 1 make[1]: Leaving directory `/data0/src/redis-2.6.2/src' make: *** [all] Error 2 解决办法： make MALLOC=libc 移动配置文件到安装目录下 cd .. mkdir /usr/local/redis/etc 修改redis启动配置文件 注释以下绑定的主机地址 vim /opt/redis-4.0.8/redis.conf # bind 127.0.0.1 redis.conf 修改redis的保护模式为no，不启用 127.0.0.1:6379> config set protected-mode \"no\" 或者 修改 redis.conf 配置文件的 protected-mode值为 no daemonize 值为 yes ## 后台启动 cp redis.conf /usr/local/redis/etc 启动（&后台启动）： redis-server /usr/local/redis/etc/redis.conf & 关闭： redis-cli shutdown redis配置密码 通过配置文件进行配置 redis配置文件通常在/usr/local/redis/etc/redis.conf中，打开配置文件找到#requirepass foobared 去掉行前的注释，并修改密码为所需的密码,保存文件requirepass 123456 重启redis 查看redis进程 ps -aux | grep redis "},"docs/base/Redis哨兵模式安装教程.html":{"url":"docs/base/Redis哨兵模式安装教程.html","title":"Redis 哨兵模式安装教程","keywords":"","body":"redis单节点简单安装 安装编译依赖 # centos yum install gcc yum -y install tcl* # ubuntu apt-get install build-essential tcl 下载redis curl -o ./redis-2.8.24.tar.gz http://download.redis.io/releases/redis-2.8.24.tar.gz 编译安装 make make test 出现报错：You need tcl 8.5 or newer in order to run the Redis test 正解:apt-get update 如果已update 请执行下列逻辑 解决方式:安装 tcl wget http://downloads.sourceforge.net/tcl/tcl8.6.1-src.tar.gz sudo tar xzvf tcl8.6.1-src.tar.gz -C /usr/local/ cd /usr/local/tcl8.6.1/unix/ sudo ./configure sudo make sudo make install make install 配置 mkdir /etc/redis/ cd /etc/redis sudo cp /data/redis/redis-2.8.24/redis.conf ./redis.conf 启动（&后台启动） redis-server /etc/redis/redis.conf & 关闭 redis-cli shutdown 哨兵模式 在redis单节点安装前3步的基础上，以三台Centeos 7(因为在openstack内，所以10.36.8段的是浮动ip)为例： |||||| |10.36.8.3| redis1 | sentinel1 |#主 |内部ip:192.168.0.9 | |10.36.8.4| redis2 | sentinel2 |#从 |内部ip:192.168.0.10 | |10.36.8.7| | sentinel3 |# |内部ip:192.168.0.11| 配置redis.conf 创建配置文件 sudo mkdir /etc/redis/ cd /etc/redis sudo cp /data/redis/redis-2.8.24/redis.conf ./redis.conf 修改redis.conf（只配置主从两台，主从配置不同） vim ./redis.conf #10.36.8.3 redis1 sentinel1 #主 内部ip:192.168.0.9 bind 192.168.0.9 requirepass hostsname #10.36.8.4 redis2 sentinel2 #从 内部ip:192.168.0.10 bind 192.168.0.10 slaveof 192.168.0.9 6379 masterauth hostsname requirepass hostsname 修改sentinel.conf 创建配置文件： cd /etc/redis sudo cp /data/redis/redis-2.8.24/sentinel.conf ./sentinel.conf 修改sentinel.conf（三台配置相同） ||||| |sentinel| monitor |mymaster| 192.168.0.9 6379 2 | |sentinel| auth-pass |mymaster| hostsname | 主从启动&测试 启动 # 192.168.0.9 redis-server /etc/redis/redis.conf & # 192.168.0.10 redis-server /etc/redis/redis.conf 可以看到控制台中有打印主从建立联系，命令后加&可后台启动 测试 (在主节点写入，从节点可看到) # 192.168.0.9 $ redis-cli -a hostsname -h 192.168.0.9 -p 6379 192.168.0.9:6379> set a 1 OK 192.168.0.9:6379> get a \"1\" 192.168.0.9:6379> # 192.168.0.10 $ redis-cli -a hostsname -h 192.168.0.10 -p 6379 192.168.0.10:6379> keys * 1) \"a\" 192.168.0.10:6379> get a \"1\" 192.168.0.10:6379> 哨兵启动&测试 启动 redis-sentinel /etc/redis/sentinel.conf & 测试 在任意一台,查询主节点 $ redis-cli -a hostsname -h 192.168.0.10 -p 26379 192.168.0.10:26379> SENTINEL get-master-addr-by-name mymaster 1) \"192.168.0.9\" 2) \"6379\" 192.168.0.10:26379> "},"docs/base/nginx安装.html":{"url":"docs/base/nginx安装.html","title":"nginx 安装","keywords":"","body":"nginx安装及配置 nginx安装 安装gcc g++的依赖库 ubuntu平台可以使用如下命令。 apt install build-essential libtool make gcc centeros平台可以使用如下命令。 centos平台编译环境使用如下指令 安装make： yum -y install gcc automake autoconf libtool make 安装g++: yum install gcc gcc-c++ 安装 pcre依赖库（http://www.pcre.org/） sudo apt update sudo apt install libpcre3 libpcre3-dev 安装 zlib依赖库（http://www.zlib.net） apt install zlib1g-dev 安装 ssl依赖库 apt install openssl 下载最新版本 Nginx： wget http://nginx.org/download/nginx-1.11.3.tar.gz 解压： tar -zxvf nginx-1.11.3.tar.gz 进入解压目录： cd nginx-1.11.3 配置： ./configure --prefix=/usr/local/nginx 编辑nginx： make 注意：这里可能会报错，提示“pcre.h No such file or directory”,具体详见：http://stackoverflow.com/questions/22555561/error-building-fatal-error-pcre-h-no-such-file-or-directory 需要安装 libpcre3-dev,命令为：sudo apt install libpcre3-dev 安装nginx： sudo make install 编辑/usr/local/nginx/conf/nginx.conf，看 “nginx配置” 启动nginx： sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf 注意：-c 指定配置文件的路径，不加的话，nginx会自动加载默认路径的配置文件，可以通过 -h查看帮助命令。 查看nginx进程： ps -ef|grep nginx nginx配置 vim /usr/local/nginx/conf/nginx.conf server { listen 8090; server_name localhost; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $host:$server_port; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; location /cloud { proxy_pass http:baidu.com:8096/cloud; } location /cloudweb { proxy_pass http:baidu.com:8099/cloudweb/; } location /cloudrest { proxy_pass http:baidu.com:8098/cloudrest; } location / { proxy_pass http:baidu.com:8088; } location /authweb { proxy_pass http:baidu.com:8084/authweb/; } location /authrest { proxy_pass http:baidu.com:8083/authrest/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } "}}